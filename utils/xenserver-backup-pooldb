#!/bin/bash

##########################################
# Lorenzo Cocchi                         #
# Backup Xen Server Backup Pool Database #
##########################################

set -e
umask 0077

LANG=C
IFS=$' \t\n'
PATH=/opt/xensource/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

die() {
    local MSG="$1"
    local E=${2-1}
    echo "${MSG}" >&2
    exit ${E}
}

send_mail() {
    local TO="$1"
    local STATUS="$2"
    local MSG="$3"

    ssmtp ${TO} <<EOF
To:${TO}
From:${HOSTNAME}
Subject: [${STATUS}] [XenServer PoolDumpDatabase]

Hostname: ${HOSTNAME}
Script: $(basename $0)
Status: ${STATUS}
Msg: ${MSG}

EOF
}

CONF="${1:-/usr/local/etc/$(basename $0).conf}"

SR_MOUNT="/var/backups"
MAX_DUMP="1,14"
DIR_TARGET="pool-database"
BACKUP_NAME="pool_db"
MAIL_TO="notifiche@softecspa.it"

[ -f ${CONF} ] && . ${CONF}

POOL_MASTER_UUID=$(xe pool-list params=master --minimal)
POOL_MASTER_NAME=$(xe host-list uuid=${POOL_MASTER_UUID} params=name-label \
    --minimal)

if [ -z "${POOL_MASTER_NAME}" ]; then
    send_mail ${MAIL_TO} "ERROR" "Pool Master: Not Found"
    die
fi

if [ "${POOL_MASTER_NAME}" == "$(hostname)" ]; then
    #if ! mount ${SR_MOUNT} &>/dev/null; then
    #    send_mail ${MAIL_TO} "ERROR" "mount: ${SR_MOUNT}"
    #    die
    #fi

    cd "${SR_MOUNT}/${DIR_TARGET}" &>/dev/null

    if [ $? -ne 0 ]; then
        send_mail ${MAIL_TO} "ERROR" "cd: ${SR_MOUNT}/${DIR_TARGET}"
        die
    fi

    if [ ${PWD} = "${SR_MOUNT}/${DIR_TARGET}" ]; then
        xe pool-dump-database file-name=${BACKUP_NAME}_$(date +%F-%H%M%S)
        RETVAL=$?
        if [ $? -ne 0 ]; then
            send_mail ${MAIL_TO} "ERROR" "xe pool-dump-database: exit ${RETVAL}"
            die
        else
            send_mail ${MAIL_TO} "OK" "xe pool-dump-database: exit ${RETVAL}"
        fi

        CANDIDATE="$(ls -t1 ${BACKUP_NAME}_* &>/dev/null | sed ${MAX_DUMP}d)"
        [ -n "${CANDIDATE}" ] && rm -f ${CANDIDATE} 2>/dev/null
    else
        send_mail ${MAIL_TO} "ERROR" "${PWD} != ${SR_MOUNT}/${DIR_TARGET}"
    fi

    sync
    #cd /tmp && umount ${SR_MOUNT}
    cd /tmp
fi

# EOF
